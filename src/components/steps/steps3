<template>
  <div class="step">
    <h2>Step 3: Return Projection</h2>
    
    <div class="results">
      <div class="result-card">
        <h3>Total Invested</h3>
        <p>R$ {{ calculateTotalInvested().toLocaleString('pt-BR') }}</p>
      </div>

      <div class="result-card">
        <h3>Projected Value ({{ store.investmentData.scenario }} scenario)</h3>
        <p>R$ {{ calculateProjection().toLocaleString('pt-BR') }}</p>
        <TaxTooltip :investment="store.investmentData" />
      </div>
    </div>

    <div class="button-group">
      <button @click="$emit('back')">Back</button>
      <button @click="$emit('next')">Next</button>
    </div>
  </div>
</template>

<script setup>
import { useSimulationStore } from '../../stores/simulationStore'
import TaxTooltip from '../shared/TaxTooltip.vue'

const store = useSimulationStore()

const calculateTotalInvested = () => {
  return store.investmentData.monthlyAmount * store.investmentData.term
}

const calculateProjection = () => {
  const { scenario, monthlyAmount, term } = store.investmentData
  const interestRates = {
    optimistic: 0.12, // 12% ao ano
    neutral: 0.08,     // 8% ao ano
    pessimistic: 0.04  // 4% ao ano
  }
  
  const total = monthlyAmount * term
  return total * (1 + interestRates[scenario]) ** (term / 12)
}
</script>

<style scoped>
.results {
  display: grid;
  gap: 20px;
  margin: 30px 0;
}

.result-card {
  background: var(--card-bg);
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 2px 10px rgba(0,0,0,0.1);
}

.result-card h3 {
  margin-top: 0;
  color: var(--text-secondary);
}
</style>
